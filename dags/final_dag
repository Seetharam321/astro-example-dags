from airflow import DAG
from airflow.operators.python import PythonOperator
from datetime import datetime, timedelta

def task_a():
    print("Running Task A")

def task_b():
    print("Running Task B")

def task_c():
    print("Running Task C")

def task_d():
    print("Running Task D")

def task_e():
    print("Running Task E")

def task_f():
    print("Running Task F")

with DAG(
    "final_dag",
    start_date=datetime(2025, 2, 12, 19, 30),
    schedule_interval=["30 19 * * *", "30 20 * * *", "30 21 * * *"],
    catchup=False,
    tags=["Final"],
) as dag:

    task_a = PythonOperator(task_id="task_a", python_callable=task_a)
    task_b = PythonOperator(task_id="task_b", python_callable=task_b)
    task_c = PythonOperator(task_id="task_c", python_callable=task_c)
    task_d = PythonOperator(task_id="task_d", python_callable=task_d)
    task_e = PythonOperator(task_id="task_e", python_callable=task_e)
    task_f = PythonOperator(task_id="task_f", python_callable=task_f)

    task_a >> [task_b, task_c]
    task_b >> task_d
    task_c >> task_e
    [task_d, task_e] >> task_f
